{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "VmAdminUsername": {
            "type": "string"
        },
        "VmAdminPassword": {
            "type": "secureString"
        },
        "Restrict_SSH_VM_AccessByPublicIP": {
            "type": "string",
            "defaultValue": "*",
            "metadata": {
                "description": "The default is to allow SSH access from any source Public IP (*). To restric access it, please specify your Public IP address with CIDR. For single IP add 1.1.1.1/32."
            }
        },
        "gatewaySku": {
            "type": "string",
            "defaultValue": "VpnGw1",
            "allowedValues": [
                "VpnGw1",
                "VpnGw2",
                "VpnGw3",
                "VpnGw4",
                "VpnGw5"
            ],
            "metadata": {
                "description": "The SKU for the VPN Gateway"
            }
        },
        "vpnGatewayGeneration": {
            "type": "string",
            "defaultValue": "Generation1",
            "allowedValues": [
                "Generation1",
                "Generation2"
            ],
            "metadata": {
                "description": "Select VPN Gateway Generation."
            }
        },
        "vpnGatewayAsn": {
            "type": "string",
            "metadata": {
                "description": "VPN Gateways ASN"
            },
            "defaultValue": "65515"
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Location of the resources"
            },
            "defaultValue": "[resourceGroup().location]"
        },        
        "Azure": {
            "type": "object",
            "defaultValue": {
                "hubName": "Az-Hub",
                "addressSpacePrefix": "10.0.0.0/24",
                "subnetName": "subnet1",
                "subnet1Prefix": "10.0.0.0/27",
                "gatewaySubnetPrefix": "10.0.0.32/27",
                "AzureFirewallPrefix": "10.0.0.64/26",
                "rssubnetPrefix": "10.0.0.128/27",
                "spoke1Name": "Az-Spk1",
                "spoke1AddressSpacePrefix": "10.0.1.0/24",
                "spoke1Subnet1Prefix": "10.0.1.0/27",
                "spoke2Name": "Az-Spk2",
                "spoke2AddressSpacePrefix": "10.0.2.0/24",
                "spoke2Subnet1Prefix": "10.0.2.0/27"
            }
        }
    },
    "variables": {
        "nsgname": "Default-NSG",
        "artifactsLocation": "https://raw.githubusercontent.com/dmauser/Lab/master/RS-ER-VPN-Gateway-Transit/linked/",
        "ergwtemplateURI": "[concat(uri(variables('artifactsLocation'),'ergw.json'))]",
        "nsgtemplateURI": "[concat(uri(variables('artifactsLocation'),'nsg.json'))]",
        "azurevnettemplateURI": "[concat(uri(variables('artifactsLocation'),'vnet-azure.json'))]",
        "spokevnettemplateURI": "[concat(uri(variables('artifactsLocation'),'vnet-spoke.json'))]",
        "aavpngwtemplateURI": "[concat(uri(variables('artifactsLocation'),'aa-vpngw.json'))]",
        "vmtemplateURI": "[concat(uri(variables('artifactsLocation'),'vm.json'))]",
        "vnetpeeringURI": "[concat(uri(variables('artifactsLocation'),'vnet-peering.json'))]",
        "Azure": {
            "subnetName": "subnet1",
            "gatewayName": "[concat(parameters('Azure').hubname,'-vpngw')]",
            "ergatewayName": "[concat(parameters('Azure').hubname,'-ergw')]",
            "gatewayPublicIPName1": "[concat(parameters('Azure').hubname,'-vpngw-pip1')]",
            "gatewayPublicIPName2": "[concat(parameters('Azure').hubname,'-vpngw-pip2')]",
            "asn": "[parameters('vpnGatewayAsn')]",
            "routeserverName": "[concat(parameters('Azure').hubname,'-routeserver')]",
            "routeserverSubnetName": "RouteServerSubnet",
            "AzureFirewallSubnetName": "AzureFirewallSubnet",
            "spoke1subnetName": "subnet1",
            "spoke2subnetName": "subnet1"
        }
    },
    "resources": [
        {
            "name": "NSG",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('nsgtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "networkSecurityGroupName": {
                        "value": "[variables('nsgname')]"
                    },
                    "RestrictSshAccessByPublicIP": {
                        "value": "[parameters('Restrict_SSH_VM_AccessByPublicIP')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }

            }
        },
        {
            "name": "[concat(parameters('Azure').hubName, '-vnet')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'NSG')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('azurevnettemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "name": {
                        "value": "[parameters('Azure').hubname]"
                    },
                    "addressSpacePrefix": {
                        "value": "[parameters('Azure').addressSpacePrefix]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').subnetName]"
                    },
                    "subnetPrefix": {
                        "value": "[parameters('Azure').subnet1Prefix]"
                    },
                    "rssubnetPrefix": {
                        "value": "[parameters('Azure').rssubnetPrefix]"
                    },
                    "AzureFirewallPrefix": {
                        "value": "[parameters('Azure').AzureFirewallPrefix]"
                    },
                    "gatewaySubnetPrefix": {
                        "value": "[parameters('Azure').gatewaySubnetPrefix]"
                    }
                }

            }
        },
        {
            "name": "[concat(parameters('Azure').spoke1Name, '-vnet')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'NSG')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('spokevnettemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "name": {
                        "value": "[parameters('Azure').spoke1Name]"
                    },
                    "addressSpacePrefix": {
                        "value": "[parameters('Azure').spoke1AddressSpacePrefix]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').spoke1subnetName]"
                    },
                    "subnetPrefix": {
                        "value": "[parameters('Azure').spoke1Subnet1Prefix]"
                    }
                }

            }
        },
        {
            "name": "[concat(parameters('Azure').spoke2Name, '-vnet')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'NSG')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('spokevnettemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "name": {
                        "value": "[parameters('Azure').spoke2Name]"
                    },
                    "addressSpacePrefix": {
                        "value": "[parameters('Azure').spoke2AddressSpacePrefix]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').spoke2subnetName]"
                    },
                    "subnetPrefix": {
                        "value": "[parameters('Azure').spoke2Subnet1Prefix]"
                    }
                }

            }
        },
        {
            "name": "[concat(parameters('Azure').spoke1Name, '-to-HUB-Peering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('Azure').gatewayName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetpeeringURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "peeringname": {
                        "value": "Spoke1-to-Hub"
                    },
                    "hubNetwork": {
                        "value": "[concat(parameters('Azure').hubName,'-vnet')]"
                    },
                    "spokeNetwork": {
                        "value": "[concat(parameters('Azure').spoke1Name,'-vnet')]"
                    },
                    "direction": {
                        "value": "SpoketoHub"
                    },
                    "HubVnetID": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(parameters('Azure').hubName, '-vnet'))]"
                    }
                }

            }
        },
        {
            "name": "[concat(parameters('Azure').spoke2Name, '-to-HUB-Peering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('Azure').gatewayName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetpeeringURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "peeringname": {
                        "value": "Spoke2-to-Hub"
                    },
                    "hubNetwork": {
                        "value": "[concat(parameters('Azure').hubName,'-vnet')]"
                    },
                    "spokeNetwork": {
                        "value": "[concat(parameters('Azure').spoke2Name,'-vnet')]"
                    },
                    "direction": {
                        "value": "SpoketoHub"
                    },
                    "HubVnetID": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(parameters('Azure').hubName, '-vnet'))]"
                    }
                }

            }
        },
        {
            "name": "[concat(parameters('Azure').hubName, '-to-Spoke1-Peering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('Azure').spoke1Name,'-vnet'))]",
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('Azure').hubName,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetpeeringURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "peeringname": {
                        "value": "Hub-to-Spoke1"
                    },
                    "hubNetwork": {
                        "value": "[concat(parameters('Azure').hubName,'-vnet')]"
                    },
                    "spokeNetwork": {
                        "value": "[concat(parameters('Azure').spoke1Name,'-vnet')]"
                    },
                    "direction": {
                        "value": "HubToSpoke"
                    },
                    "SpokeVnetID": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(parameters('Azure').spoke1Name, '-vnet'))]"
                    }
                }

            }
        },
        {
            "name": "[concat(parameters('Azure').hubName, '-to-Spoke2-Peering')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('Azure').spoke2Name,'-vnet'))]",
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('Azure').hubName,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vnetpeeringURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "peeringname": {
                        "value": "Hub-to-Spoke2"
                    },
                    "hubNetwork": {
                        "value": "[concat(parameters('Azure').hubName,'-vnet')]"
                    },
                    "spokeNetwork": {
                        "value": "[concat(parameters('Azure').spoke2Name,'-vnet')]"
                    },
                    "direction": {
                        "value": "HubToSpoke"
                    },
                    "SpokeVnetID": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(parameters('Azure').spoke2Name, '-vnet'))]"
                    }
                }

            }
        },
        {
            "name": "[variables('Azure').gatewayName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('Azure').hubName,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('aavpngwtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "gatewayName": {
                        "value": "[variables('Azure').gatewayName]"
                    },
                    "gatewaySku": {
                        "value": "[parameters('gatewaySku')]"
                    },
                    "vpnGatewayGeneration": {
                        "value": "[parameters('vpnGatewayGeneration')]"
                    },
                    "asn": {
                        "value": "[variables('Azure').asn]"
                    },
                    "vnetName": {
                        "value": "[concat(parameters('Azure').hubName, '-vnet')]"
                    }
                }

            }
        },
        {
            "name": "[variables('Azure').ergatewayName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('Azure').hubName,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('ergwtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "expressrouteGatewayName": {
                        "value": "[variables('Azure').ergatewayName]"
                    },
                    "vnetName": {
                        "value": "[concat(parameters('Azure').hubName,'-vnet')]"
                    }
                }

            }
        },
        {
            "name": "[concat(parameters('Azure').Hubname,'-vm')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('Azure').Hubname,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('VmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('VmAdminPassword')]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').subnetName]"
                    },
                    "virtualNetworkId": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(parameters('Azure').Hubname, '-vnet'))]"
                    },
                    "virtualMachineName": {
                        "value": "[concat(parameters('Azure').Hubname,'-lxvm')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('Azure').spoke1Name,'-vm')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('Azure').spoke1Name,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('VmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('VmAdminPassword')]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').spoke1subnetName]"
                    },
                    "virtualNetworkId": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(parameters('Azure').spoke1Name, '-vnet'))]"
                    },
                    "virtualMachineName": {
                        "value": "[concat(parameters('Azure').spoke1Name,'-lxvm')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        },
        {
            "name": "[concat(parameters('Azure').spoke2Name,'-vm')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2020-10-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', concat(parameters('Azure').spoke2Name,'-vnet'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('vmtemplateURI')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "adminUsername": {
                        "value": "[parameters('VmAdminUsername')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('VmAdminPassword')]"
                    },
                    "subnetName": {
                        "value": "[variables('Azure').spoke2subnetName]"
                    },
                    "virtualNetworkId": {
                        "value": "[resourceId('Microsoft.Network/virtualNetworks/', concat(parameters('Azure').spoke2Name, '-vnet'))]"
                    },
                    "virtualMachineName": {
                        "value": "[concat(parameters('Azure').spoke2Name,'-lxvm')]"
                    },
                    "location": {
                        "value": "[parameters('location')]"
                    }
                }
            }
        }
    ]
}